<?php

/**
 * @file
 * Functions to support theming in the Umami theme.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Form\FormStateInterface;
use Drupal\search\SearchPageInterface;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function umami_custom_preprocess_html(&$variables) {
  // Add a sidebar class if the sidebar has content in it.
  if (!empty($variables['page']['sidebar'])) {
    $variables['attributes']['class'][] = 'two-columns';
    $variables['#attached']['library'][] = 'umami_custom/two-columns';
  }
  else {
    $variables['attributes']['class'][] = 'one-column';
  }
  $node = \Drupal::routeMatch()->getParameter('node');
  if (isset($node) && is_object($node)) {
    $variables['attributes']['class'][] = 'node-' . $node->id();
  }
}

/**
 * Implements hook_preprocess_field().
 */
function umami_custom_preprocess_field(&$variables, $hook) {
  $element = $variables['element'];
  // Add class to label and items fields to be styled using the meta styles.
  if (isset($element['#field_name'])) {
    if (
      $element['#field_name'] == 'field_recipe_category' ||
      $element['#field_name'] == 'field_tags' ||
      $element['#field_name'] == 'field_difficulty') {
      $variables['attributes']['class'] = 'label-items';
    }
  }
}

/**
 * Implements hook_preprocess_block().
 */
function umami_custom_preprocess_block(&$variables) {
  $variables['title_attributes']['class'][] = 'block__title';
  // Add a class indicating the custom block bundle.
  if (isset($variables['elements']['content']['#block_content'])) {
    $block_content = $variables['elements']['content']['#block_content'];

    $variables['attributes']['class'][] = Html::getClass('block-type-' . $block_content->bundle());

    // Add description as class.
    if ($block_content->bundle() == 'banner_block') {
      $description = $block_content->get('info')[0]->getValue()['value'] ?? NULL;
      if (!empty($description)) {
        $variables['attributes']['class'][] = Html::getClass('block-description-' . $description);
      }

      // Hide summary section if content is missing.
      $variables['show_summary'] = !empty($block_content->get('field_summary')[0]) ||
        !empty($block_content->get('field_content_link')[0]) ||
        !empty($block_content->get('field_title')[0]);
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for block templates.
 */
function umami_custom_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

/**
 * Implements hook_preprocess_breadcrumb().
 */
function umami_custom_preprocess_breadcrumb(&$variables) {
  // We are creating a variable for the Current Page Title, to allow us to print
  // it after the breadcrumbs loop has run.
  $route_match = \Drupal::routeMatch();
  // Search page titles aren't resolved using the title_resolver service - it
  // will always return 'Search' instead of 'Search for [term]', which would
  // give us a breadcrumb of Home >> Search >> Search.
  // @todo Revisit after https://www.drupal.org/project/drupal/issues/2359901
  // @todo Revisit after https://www.drupal.org/project/drupal/issues/2403359
  $entity = $route_match->getParameter('entity');
  if ($entity instanceof SearchPageInterface) {
    $variables['current_page_title'] = $entity->getPlugin()->suggestedTitle();
  }
  else {
    $variables['current_page_title'] = \Drupal::service('title_resolver')->getTitle(\Drupal::request(), $route_match->getRouteObject());
  }
  // Since we are printing the 'Current Page Title', add the URL cache context.
  // If we don't, then we might end up with something like
  // "Home > Articles" on the Recipes page, which should read "Home > Recipes".
  $variables['#cache']['contexts'][] = 'url';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function umami_custom_form_search_block_form_alter(&$form, FormStateInterface $form_state) {
  $form['keys']['#attributes']['placeholder'] = t('Search by keyword, ingredient, dish');
}


/**
 * Implements hook_preprocess_page().
 */
function umami_custom_preprocess_page(&$variables) {
  if (isset($variables['node']) && ($variables['node']->id() == 20)) {
    unset($variables['page']['content']['umami_custom_content']);
  }

}
